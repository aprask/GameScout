services:
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
  db:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    expose:
      - "3000"
    networks:
      - default
    volumes:
      - ./server/src/auth/keys:/usr/local/app/dist/auth/keys:ro
    environment:
      - NODE_ENV=production
      - DEV_HOST=db
    depends_on:
      - db
      - rabbitmq
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - default
    environment:
      - NODE_ENV=production
  scheduler-proc:
    build:
      context: ./scheduler-proc
      dockerfile: Dockerfile
    container_name: scheduler-proc
    expose:
      - "3002"
    depends_on:
      - server
      - rabbitmq
    environment:
      - NODE_ENV=production

volumes:
  postgres-data:
  rabbitmq-data:

networks:
  default:
    driver: bridge